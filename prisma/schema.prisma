// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id            String        @id @default(cuid())
  email         String        @unique
  password      String
  name          String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  goals         Goal[]
  commitments   Commitment[]
  notifications Notification[]
}

model Goal {
  id          String        @id @default(cuid())
  title       String
  description String?
  category    String
  progress    Int          @default(0)
  dueDate     DateTime?
  status      GoalStatus   @default(IN_PROGRESS)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  userId      String
  user        User         @relation(fields: [userId], references: [id])
  commitments Commitment[]
}

model Commitment {
  id          String           @id @default(cuid())
  title       String
  description String?
  dueDate     DateTime
  completed   Boolean          @default(false)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  userId      String
  user        User             @relation(fields: [userId], references: [id])
  goalId      String
  goal        Goal             @relation(fields: [goalId], references: [id])
  reminders   Reminder[]
}

model Reminder {
  id            String       @id @default(cuid())
  commitmentId  String
  commitment    Commitment   @relation(fields: [commitmentId], references: [id])
  reminderTime  DateTime
  isSent        Boolean      @default(false)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Notification {
  id        String   @id @default(cuid())
  title     String
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

enum GoalStatus {
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
  ARCHIVED
}
